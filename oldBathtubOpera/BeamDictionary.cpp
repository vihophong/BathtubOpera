//
// File generated by rootcint at Sun Sep 25 14:55:43 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BeamDictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BeamDictionary.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void Beam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Beam(void *p = 0);
   static void *newArray_Beam(Long_t size, void *p);
   static void delete_Beam(void *p);
   static void deleteArray_Beam(void *p);
   static void destruct_Beam(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Beam*)
   {
      ::Beam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Beam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Beam", ::Beam::Class_Version(), "./Beam.h", 17,
                  typeid(::Beam), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Beam::Dictionary, isa_proxy, 4,
                  sizeof(::Beam) );
      instance.SetNew(&new_Beam);
      instance.SetNewArray(&newArray_Beam);
      instance.SetDelete(&delete_Beam);
      instance.SetDeleteArray(&deleteArray_Beam);
      instance.SetDestructor(&destruct_Beam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Beam*)
   {
      return GenerateInitInstanceLocal((::Beam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Beam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr Beam::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Beam::Class_Name()
{
   return "Beam";
}

//______________________________________________________________________________
const char *Beam::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Beam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Beam::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Beam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Beam::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Beam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Beam::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Beam*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void Beam::Streamer(TBuffer &R__b)
{
   // Stream an object of class Beam.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(Beam::Class(),this);
   } else {
      R__b.WriteClassBuffer(Beam::Class(),this);
   }
}

//______________________________________________________________________________
void Beam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Beam.
      TClass *R__cl = ::Beam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "faoq[6]", faoq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "faoqc[6]", faoqc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fzet[6]", fzet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fzetc[6]", fzetc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftof[3]", ftof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbeta[3]", fbeta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdelta[4]", fdelta);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Beam(void *p) {
      return  p ? new(p) ::Beam : new ::Beam;
   }
   static void *newArray_Beam(Long_t nElements, void *p) {
      return p ? new(p) ::Beam[nElements] : new ::Beam[nElements];
   }
   // Wrapper around operator delete
   static void delete_Beam(void *p) {
      delete ((::Beam*)p);
   }
   static void deleteArray_Beam(void *p) {
      delete [] ((::Beam*)p);
   }
   static void destruct_Beam(void *p) {
      typedef ::Beam current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Beam

/********************************************************
* BeamDictionary.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBeamDictionary();

extern "C" void G__set_cpp_environmentBeamDictionary() {
  G__cpp_reset_tagtableBeamDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevBeamDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Beam */
static int G__BeamDictionary_221_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Beam* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Beam[n];
     } else {
       p = new((void*) gvp) Beam[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Beam;
     } else {
       p = new((void*) gvp) Beam;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BeamDictionaryLN_Beam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetAQ((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetZ((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetAQZ((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetTOF((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetBeta((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetTOFBeta((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->SetDelta((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->CorrectAQ((unsigned short) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Beam*) G__getstructoffset())->GetAQ((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Beam*) G__getstructoffset())->GetCorrAQ((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Beam*) G__getstructoffset())->GetZ((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Beam*) G__getstructoffset())->GetTOF((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Beam*) G__getstructoffset())->GetBeta((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Beam*) G__getstructoffset())->GetDelta((unsigned short) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Beam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Beam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Beam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Beam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Beam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Beam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Beam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Beam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BeamDictionary_221_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Beam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BeamDictionary_221_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Beam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Beam(*(Beam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BeamDictionaryLN_Beam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Beam G__TBeam;
static int G__BeamDictionary_221_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Beam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Beam*) (soff+(sizeof(Beam)*i)))->~G__TBeam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Beam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Beam*) (soff))->~G__TBeam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BeamDictionary_221_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Beam* dest = (Beam*) G__getstructoffset();
   *dest = *(Beam*) libp->para[0].ref;
   const Beam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Beam */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBeamDictionary {
 public:
  G__Sizep2memfuncBeamDictionary(): p(&G__Sizep2memfuncBeamDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBeamDictionary::*p)();
};

size_t G__get_sizep2memfuncBeamDictionary()
{
  G__Sizep2memfuncBeamDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBeamDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BeamDictionaryLN_Beam))) {
     Beam *G__Lderived;
     G__Lderived=(Beam*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BeamDictionaryLN_Beam),G__get_linked_tagnum(&G__BeamDictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBeamDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BeamDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BeamDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BeamDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BeamDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__BeamDictionaryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Beam */
static void G__setup_memvarBeam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BeamDictionaryLN_Beam));
   { Beam *p; p=(Beam*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"faoq[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"faoqc[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fzet[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fzetc[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"ftof[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fbeta[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fdelta[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BeamDictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBeamDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBeam(void) {
   /* Beam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BeamDictionaryLN_Beam));
   G__memfunc_setup("Beam",373,G__BeamDictionary_221_0_1, 105, G__get_linked_tagnum(&G__BeamDictionaryLN_Beam), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetAQ",446,G__BeamDictionary_221_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - j d - - 0 - aoq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__BeamDictionary_221_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - j d - - 0 - zet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAQZ",536,G__BeamDictionary_221_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"r - - 0 - j d - - 0 - aoq "
"d - - 0 - zet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOF",533,G__BeamDictionary_221_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - j d - - 0 - tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeta",680,G__BeamDictionary_221_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - j d - - 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTOFBeta",913,G__BeamDictionary_221_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"r - - 0 - j d - - 0 - tof "
"d - - 0 - beta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDelta",790,G__BeamDictionary_221_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - j d - - 0 - delta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CorrectAQ",868,G__BeamDictionary_221_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - - 0 - j d - - 0 - corr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAQ",434,G__BeamDictionary_221_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrAQ",840,G__BeamDictionary_221_0_12, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZ",378,G__BeamDictionary_221_0_13, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTOF",521,G__BeamDictionary_221_0_14, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeta",668,G__BeamDictionary_221_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDelta",778,G__BeamDictionary_221_0_16, 100, -1, -1, 0, 1, 1, 1, 0, "r - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BeamDictionary_221_0_17, 85, G__get_linked_tagnum(&G__BeamDictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Beam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BeamDictionary_221_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Beam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BeamDictionary_221_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Beam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BeamDictionary_221_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Beam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BeamDictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BeamDictionary_221_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BeamDictionary_221_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Beam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BeamDictionary_221_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Beam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BeamDictionary_221_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Beam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BeamDictionary_221_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Beam::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Beam", 373, G__BeamDictionary_221_0_29, (int) ('i'), G__get_linked_tagnum(&G__BeamDictionaryLN_Beam), -1, 0, 1, 1, 1, 0, "u 'Beam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Beam", 499, G__BeamDictionary_221_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BeamDictionary_221_0_31, (int) ('u'), G__get_linked_tagnum(&G__BeamDictionaryLN_Beam), -1, 1, 1, 1, 1, 0, "u 'Beam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBeamDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBeamDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBeamDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BeamDictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__BeamDictionaryLN_Beam = { "Beam" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBeamDictionary() {
  G__BeamDictionaryLN_TClass.tagnum = -1 ;
  G__BeamDictionaryLN_TBuffer.tagnum = -1 ;
  G__BeamDictionaryLN_TMemberInspector.tagnum = -1 ;
  G__BeamDictionaryLN_TObject.tagnum = -1 ;
  G__BeamDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BeamDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BeamDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BeamDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BeamDictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BeamDictionaryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__BeamDictionaryLN_Beam.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBeamDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BeamDictionaryLN_Beam),sizeof(Beam),-1,292096,(char*)NULL,G__setup_memvarBeam,G__setup_memfuncBeam);
}
extern "C" void G__cpp_setupBeamDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupBeamDictionary()");
  G__set_cpp_environmentBeamDictionary();
  G__cpp_setup_tagtableBeamDictionary();

  G__cpp_setup_inheritanceBeamDictionary();

  G__cpp_setup_typetableBeamDictionary();

  G__cpp_setup_memvarBeamDictionary();

  G__cpp_setup_memfuncBeamDictionary();
  G__cpp_setup_globalBeamDictionary();
  G__cpp_setup_funcBeamDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBeamDictionary();
  return;
}
class G__cpp_setup_initBeamDictionary {
  public:
    G__cpp_setup_initBeamDictionary() { G__add_setup_func("BeamDictionary",(G__incsetup)(&G__cpp_setupBeamDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBeamDictionary() { G__remove_setup_func("BeamDictionary"); }
};
G__cpp_setup_initBeamDictionary G__cpp_setup_initializerBeamDictionary;

